@model SinExWebApp20328381.Models.ShipmentStatusHistory

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create","ShipmentStatusHistories",FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ShipmentStatusHistory</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        @Html.HiddenFor(model => model.WaybillId, new { id = "WaybillId", Value = ViewData["WaybillId"] })
        
        
        
        
        
        <!--put deliver person, deliver place, status or any other property here -->
        <div class="form-group">
         @if (ViewData["Status"].ToString() == "Confirmed")
         {
            @Html.LabelFor(model => model.Status, "Is the shipment picked up?", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                
                    Yes: @Html.RadioButtonFor(model => model.Status, "PickedUp")
                    No: @Html.RadioButtonFor(model => model.Status, "Confirmed")
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
         }
         else if (ViewData["Status"].ToString() == "PickedUp")
         {
            @Html.LabelFor(model => model.Status, "Is the shipment Delivered?", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

               Yes: @Html.RadioButtonFor(model => model.Status, "Delivered")
                No: @Html.RadioButtonFor(model => model.Status, "PickedUp")
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
         } else if (ViewData["Status"].ToString() == "Delivered") {
             @Html.HiddenFor(model => model.Status, new {id = "Status" , Value = "Delivered"})
         }

        </div>
         

        <!--When the Status is set to "Delivered", the following elements should be displayed -->
        <div class="form-group">
            @Html.Label("DeliveredPlace", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeliveredPlace, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeliveredPlace, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.DeliveredPerson, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeliveredPerson, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeliveredPerson, "", new { @class = "text-danger" })
            </div>
        </div>






       


        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new {htmlAttributes = new { @class = "form-control", @type = "date"}})
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>
        <p>Please enter the time in HH::mm format</p>
        <div class="form-group">
            @Html.LabelFor(model => model.Time, htmlAttributes: new { @class = "control-label col-md-2" , })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TimeValue, new { htmlAttributes = new { @class ="form-control"} } )
                @Html.ValidationMessageFor(model => model.TimeValue, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
